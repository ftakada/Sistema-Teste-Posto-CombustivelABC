unit DBConnection;

interface

uses
  System.SysUtils,
  System.IniFiles,
  FireDAC.Comp.Client,
  FireDAC.Phys.FB,
  FireDAC.Stan.Def,
  FireDAC.Stan.Async,
  FireDAC.DApt;

type
  TDBConnection = class
  private
    FConnection: TFDConnection;
    procedure CreateDatabaseIfNotExists(const ADatabase: string);
  public
    constructor Create;
    destructor Destroy; override;
    function GetConnection: TFDConnection;
  end;

implementation

{ TDBConnection }

constructor TDBConnection.Create;
var
  IniFile: TIniFile;
  Database, User, Password, Server: string;
begin
  FConnection := TFDConnection.Create(nil);
  IniFile := TIniFile.Create('dbconfig.ini');
  try
    Database := IniFile.ReadString('Database', 'Database', '');
    User := IniFile.ReadString('Database', 'User', 'sysdba');
    Password := IniFile.ReadString('Database', 'Password', 'masterkey');
    Server := IniFile.ReadString('Database', 'Server', 'localhost');

    if Database = '' then
      raise Exception.Create('Database not specified in INI file.');

    // Configurar a conexão
    FConnection.Params.DriverID := 'FB';
    FConnection.Params.Database := Database;
    FConnection.Params.UserName := User;
    FConnection.Params.Password := Password;
    FConnection.Params.Add('Server=' + Server);
    FConnection.LoginPrompt := False;

    // Conectar ao banco de dados
    FConnection.Connected := True;
  finally
    IniFile.Free;
  end;
end;

destructor TDBConnection.Destroy;
begin
  FConnection.Free;
  inherited;
end;

function TDBConnection.GetConnection: TFDConnection;
begin
  Result := FConnection;
end;


end.

